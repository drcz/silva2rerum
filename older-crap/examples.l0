(   (LABEL sq (LAMBDA (x) (MUL x x)))
    (LABEL succ (LAMBDA (x) (ADD x 1)))
    (succ 5)
    (LABEL map
	   (LAMBDA (f l)
		   (IF (EQ l ())
		       ()
		       (CONS (f (CAR l))
			     (map f (CDR l))))))
    (map sq (QUOTE (1 2 3 4)))
    (LABEL reduce (LAMBDA (kons nil xs)
			  (IF (EQ xs ())
			      nil
			      (kons (CAR xs)
				    (reduce kons nil (CDR xs))))))
    (reduce (LAMBDA (h t) (ADD h t)) 0 (QUOTE (1 2 3 4)))
    (LABEL mk-adder (LAMBDA (x) (LAMBDA (y) (ADD x y))))
    ((mk-adder 6) 7)

    ;;; hc lol chuj bury
    (LABEL revcps
    	   (LAMBDA (xs k)
		   (IF (EQ xs ())
		       (k ())
		       (revcps (CDR xs)
			       (LAMBDA (x)
				       (CONS (CAR xs)
					     (k x)))))))

    (revcps (QUOTE (derczyk likes lisp)) (LAMBDA (x) x))	   	   
)